1.638大礼包
    public int shoppingOffers(List<Integer> price, List<List<Integer>> special, List<Integer> needs) {
        int result = Integer.MAX_VALUE;
        for(int i=0;i<special.size();i++){
            List<Integer> offer = special.get(i);
            boolean flag = true;
            for(int j=0;j<needs.size();j++){
                int temp = needs.get(j) - offer.get(j);
                needs.set(j,temp);
                if(flag&&temp<0)
                    flag = false;
            }
            if(flag)
                result = Math.min(result,shoppingOffers(price,special,needs)+offer.get(needs.size()));
            for(int k=0;k<needs.size();k++){
                needs.set(k,needs.get(k)+offer.get(k));
            }
        }
        int nonoffer = 0;
        for(int i=0;i<needs.size();i++){
            nonoffer += needs.get(i)*price.get(i);
        }
        return Math.min(result,nonoffer);
    }
2.139. 单词拆分
    public boolean wordBreak(String s, List<String> wordDict) {
        if(s==null || s.length()==0)
            return true;
        boolean[] res = new boolean[s.length()+1];
        res[0] = true;
        for(int i=0;i<s.length();i++)
        {
            StringBuilder str = new StringBuilder(s.substring(0,i+1));
            for(int j=0;j<=i;j++)
            {
                if(res[j] && wordDict.contains(str.toString()))
                {
                    res[i+1] = true;
                    break;
                }
                str.deleteCharAt(0);
            }
        }
        return res[s.length()];
    }
    
